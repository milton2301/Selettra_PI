{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amilt\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Selettra_PI\\\\selettra_recruitment\\\\src\\\\components\\\\pages\\\\Candidatos.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Candidatos() {\n  _s();\n\n  const [candidatos, setCandidatatos] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/candidatos', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(resp => resp.json()).then(data => {\n      setCandidatatos(data);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: candidatos && candidatos.map(candidato => /*#__PURE__*/_jsxDEV(\"label\", {\n      type: \"text\",\n      value: candidato.id,\n      text: candidato.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Candidatos, \"mEJKmMFMn3WxW3pFseUjXGqv434=\");\n\n_c = Candidatos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Candidatos\");","map":{"version":3,"names":["useEffect","useState","Candidatos","candidatos","setCandidatatos","fetch","method","headers","then","resp","json","data","catch","err","console","log","map","candidato","id","name"],"sources":["C:/Users/amilt/OneDrive/Área de Trabalho/Selettra_PI/selettra_recruitment/src/components/pages/Candidatos.js"],"sourcesContent":["import {useEffect, useState} from 'react'\r\nexport default function Candidatos(){ \r\n    const [candidatos, setCandidatatos] = useState([])\r\n    \r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/candidatos', {\r\n            method: 'GET',\r\n            headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n        })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n            setCandidatatos(data)\r\n        })\r\n        .catch((err) => console.log(err))\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {candidatos && candidatos.map((candidato) =>(\r\n                    <label type=\"text\" value={candidato.id} text={candidato.name}/>\r\n                ))} \r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AACA,eAAe,SAASC,UAAT,GAAqB;EAAA;;EAChC,MAAM,CAACC,UAAD,EAAaC,eAAb,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACZK,KAAK,CAAC,kCAAD,EAAqC;MACtCC,MAAM,EAAE,KAD8B;MAEtCC,OAAO,EAAE;QACD,gBAAgB;MADf;IAF6B,CAArC,CAAL,CAMCC,IAND,CAMOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANhB,EAOCF,IAPD,CAOOG,IAAD,IAAU;MACZP,eAAe,CAACO,IAAD,CAAf;IACH,CATD,EAUCC,KAVD,CAUQC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVhB;EAWH,CAZQ,EAYP,EAZO,CAAT;EAcA,oBACI;IAAA,UACKV,UAAU,IAAIA,UAAU,CAACa,GAAX,CAAgBC,SAAD,iBACtB;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEA,SAAS,CAACC,EAApC;MAAwC,IAAI,EAAED,SAAS,CAACE;IAAxD;MAAA;MAAA;MAAA;IAAA,QADO;EADnB;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;GAxBuBjB,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}